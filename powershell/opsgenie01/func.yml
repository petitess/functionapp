trigger:
  branches:
    include:
      - main
  paths:
    include:
      - ci/func.yml
      - func

schedules:
  - cron: 0 0 * * *
    branches:
      include:
        - main
    always: true

pool:
  vmImage: $(RUNNER)

variables:
  azureSubscription: sp-opsgenie-prod
  environment: prod

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: build
        displayName: Build
        steps:
          - task: ArchiveFiles@2
            displayName: Create zip artifact
            inputs:
              rootFolderOrFile: func
              includeRootFolder: false

          - publish: $(Build.StagingDirectory)
            displayName: Upload artifact
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            artifact: func

  - stage: release
    displayName: Release
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: release
        displayName: Release
        environment: ${{ variables.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  displayName: Download artifact
                  artifact: func

                - task: AzureFunctionApp@2
                  displayName: Deploy Azure Function
                  inputs:
                    azureSubscription: ${{ variables.azureSubscription }}
                    appType: functionAppLinux
                    appName: func-opsgenie-${{ variables.environment }}-01
                    package: $(Agent.BuildDirectory)/**/*.zip
